#Azure Data Factory with Self-hosted Integration Runtime (SHIR)

## Project Overview

This project demonstrates how to set up a **Self-hosted Integration Runtime (SHIR)** in **Azure Data Factory (ADF)** to extract data from an **on-premises SQL Server** and load it into an **Azure SQL Database**. This enables secure and scalable cloud-based analytics using hybrid data sources.

---

##Prerequisites

These are the some steps i ensure i should check first:

- Azure subscription (I had student trial)
- On-premises machine running Windows
- Local SQL Server (e.g., SQL Server Express) with test data
- Internet access on the on-premises machine
- Installed tools:
  - Azure portal access
  - ADF access via [https://adf.azure.com](https://adf.azure.com)
  - SQL Server Management Studio (SSMS) for local DB access

---

## ðŸš€ Step-by-Step Implementation

### ðŸ”¹ Step 1: Create Azure Data Factory

1. Go to [portal.azure.com](https://portal.azure.com)
2. Click **Create a resource**
3. Search for **Data Factory** and click **Create**
4. Fill the form:
   - **Resource Group**: `ADF-SHIR-RG`
   - **Region**: East US
   - **Data Factory Name**: `adf-shir-demo`
   - **Version**: V2
5. Click **Review + Create**, then **Create**

---

### ðŸ”¹ Step 2: Install and Register SHIR

1. Launch **ADF Studio** > Go to **Manage**
2. Under **Integration Runtimes**, click **+ New**
3. Select **Self-hosted**, then click **Continue**
4. Choose **Express setup** or **Manual setup**
5. Download and run the **SHIR Installer** on your on-prem machine
6. Pasted the **authentication key** from ADF to register


### Step 3: Create Linked Services

#### ðŸ”—On-premises SQL Server Linked Service

1. Go to **Manage > Linked Services > + New**
2. Select **SQL Server**
3. Set:
   - **Integration Runtime**: Your SHIR
   - **Server name**: `localhost\SQLEXPRESS` 
   - **Authentication**: SQL 
   - Test connection and save

#### ðŸ”— Azure SQL Database Linked Service

1. Create a SQL Database in Azure
2. Create another linked service:
   - Type: **Azure SQL Database**
   - Provide server, DB name, mysql/mysql123
   - Test connection and save

---

### ðŸ”¹ Step 4: Create a Copy Data Pipeline

1. Go to **Author > + New pipeline**
2. Name the pipeline: `CopyLocalToAzureSQL`
3. Drag in a **Copy Data** activity
4. Configure:

#### Source:
- Select **on-prem SQL Server** linked service
- Choose your table or query
- Define pagination if needed

#### Sink:
- Select **Azure SQL Database** linked service
- Choose table or create new
- Map fields if needed

5. Debug the pipeline to test
6. Click **Publish All** after testing

---

### ðŸ”¹ Step 5: Trigger the Pipeline

1. Add a **Trigger Now** or **New Trigger** (schedule)
2. Monitor the pipeline under **Monitor** tab

---


